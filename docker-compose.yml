services:
  web:
    build: .
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/code
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    stdin_open: true
    tty: true
    env_file:
      - backend_challenge/.env

  init_superuser:
    build: .
    command: python init_superuser.py
    volumes:
      - .:/code
    depends_on:
      - db
    env_file:
      - backend_challenge/.env

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - backend_challenge/.env

  redis:
    image: redis

  celery:
    build: .
    command: celery -A backend_challenge worker --loglevel=debug
    volumes:
      - .:/code
    depends_on:
      - web
      - redis
    restart: always
    env_file:
      - backend_challenge/.env

  celery-beat:
    build: .
    command: celery -A backend_challenge beat --scheduler django_celery_beat.schedulers:DatabaseScheduler --loglevel=debug
    volumes:
      - .:/code
    depends_on:
      - web
      - redis
    restart: always
    env_file:
      - backend_challenge/.env

volumes:
  postgres_data:
